<Window x:Class="GBLive.Gui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:gb="clr-namespace:GBLive.GiantBomb"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase">
    
    <Window.Style>
        <Style TargetType="{x:Type Window}" BasedOn="{StaticResource {x:Type Window}}">
            <Setter Property="Title" Value="GB Live" />
            <Setter Property="Background" Value="Black" />
            <Setter Property="Width" Value="600" />
            <Setter Property="SizeToContent" Value="Height" />
            <Setter Property="ResizeMode" Value="CanMinimize" />
            <Setter Property="WindowStyle" Value="SingleBorderWindow" />
        </Style>
    </Window.Style>

    <Window.Resources>
        <CollectionViewSource x:Key="showsSortedByTime"
                              Source="{Binding Shows, Mode=OneTime}"
                              IsLiveSortingRequested="True">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Time" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <DataTemplate DataType="{x:Type gb:Show}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="70" />
                    <RowDefinition Height="70" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="190" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.Resources>
                    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Margin" Value="30,0,0,0" />
                        <Setter Property="Opacity" Value="0.75" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsPremium, Mode=OneTime}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="Foreground" Value="Gold" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>

                <Image Grid.ColumnSpan="2"
                       Grid.RowSpan="2"
                       Opacity="0.25"
                       Source="{Binding Path=Image, Mode=OneTime}" />

                <Label Grid.ColumnSpan="2"
                       Grid.Row="0"
                       Padding="0,0,20,5"
                       FontSize="21"
                       VerticalContentAlignment="Bottom">
                    <Label.Content>
                        <TextBlock Text="{Binding Path=Title, Mode=OneTime}" TextTrimming="CharacterEllipsis" />
                    </Label.Content>
                    <Label.ToolTip>
                        <TextBlock Text="{Binding Path=Title, Mode=OneTime}" />
                    </Label.ToolTip>
                </Label>

                <Label Grid.Column="0"
                       Grid.Row="1"
                       Content="{Binding Path=ShowType, Mode=OneTime}"
                       Padding="15,5,0,0"
                       VerticalContentAlignment="Top" />

                <Label Grid.Column="1"
                       Grid.Row="1"
                       Content="{Binding Path=Time, Mode=OneTime, Converter={StaticResource dateTimeOffsetConverter}, ConverterParameter='ddd MMM dd  -  HH:mm'}"
                       Padding="0,5,0,0"
                       VerticalContentAlignment="Top" />
            </Grid>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="80" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Label Grid.Row="0"
               ToolTip="{Binding LiveShowTitle}"
               MouseDoubleClick="Label_MouseDoubleClick">
            <Label.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextDecorations" Value="Underline" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Label.Resources>
            <Label.Style>
                <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                    <Setter Property="Content">
                        <Setter.Value>
                            <TextBlock Text="{StaticResource IsNotLiveMessage}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="Red" />
                    <Setter Property="Opacity" Value="0.75" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLive}" Value="True">
                            <DataTrigger.Setters>
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <TextBlock Text="{StaticResource IsLiveMessage}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="FontSize" Value="30" />
                                <Setter Property="FontStretch" Value="UltraExpanded" />
                                <Setter Property="Foreground" Value="Green" />
                                <Setter Property="Opacity" Value="1.0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>

        <ItemsControl Grid.Row="1"
                      ItemsSource="{Binding Source={StaticResource showsSortedByTime}}"
                      MouseDoubleClick="ItemsControl_MouseDoubleClick">
            <ItemsControl.Resources>
                <Style TargetType="{x:Type Image}" BasedOn="{StaticResource {x:Type Image}}">
                    <EventSetter Event="Loaded" Handler="Image_Loaded" />
                    <EventSetter Event="Unloaded" Handler="Image_Unloaded" />
                    <EventSetter Event="ImageFailed" Handler="Image_ImageFailed" />
                </Style>
            </ItemsControl.Resources>
            <ItemsControl.Style>
                <Style TargetType="{x:Type ItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
                    <Style.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Grid Height="105">
                                            <Image Opacity="0.25"
                                                   Source="{Binding Path=Settings.FallbackImage, Mode=OneTime}" />
                                            <Label>
                                                <Label.Style>
                                                    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter Property="Opacity" Value="0.6" />
                                                        <Setter Property="FontStyle" Value="Italic" />
                                                        <Setter Property="FontSize" Value="19" />
                                                    </Style>
                                                </Label.Style>
                                                <Label.Content>
                                                    <TextBlock Text="No shows scheduled" />
                                                </Label.Content>
                                            </Label>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>
        </ItemsControl>
    </Grid>
</Window>